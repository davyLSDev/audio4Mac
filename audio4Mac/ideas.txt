Old stuff from the AudioInterface.cs file

/* ? helpful info:
 * http://stackoverflow.com/questions/3880148/can-i-use-osx-augraph-from-monomac
 * http://stackoverflow.com/questions/3556886/nssound-like-framework-that-works-but-doesnt-require-dealing-with-a-steep-lear
 * 		Audio Queue services, QTkit 
 * Miquel and Mike Hutchitson give info here:
 * http://stackoverflow.com/questions/3880148/can-i-use-osx-augraph-from-monomac
 */

 /* note in libpalaso/Palaso.Media/AudioFactory.cs is where the audio interface is
 * chosen based on if the platform is MONO or not. If it is, then ALSA is used and AudioFactory returns 
 * "AudioAlsaSession (filepath)", otherwise windows returns "AudioIrrKlangSession(filePath)";
 *  there is a AudioGStreamerSession, and AudioNullSession ...
 *  looked into using GStreamer ... it uses QTKit, 
 * 	looked into SDL / and C# wrapper for that HMMMM
 */


 /* first attempt ... note some overloading of methods from here to the new AudioAVFoundationSession work
		public int ERR = 0;
		public NSSound playback = new NSSound ("../../media/applause_y.wav", byRef: false);

		public AudioInterface ()
		{
			NSApplication.Init ();
		}
		public int Play()
		{
			playback.Play ();
			return ERR;
		}
		public int Record()
		{
			return ERR;
		}
		public int Pause()
		{
			playback.Pause ();
			return ERR;
		}
		public int  Resume()
		{
			playback.Resume ();
			return ERR;
		}
		*/

